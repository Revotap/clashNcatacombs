<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.0.0">
  <zoom_level>12</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>204</x>
      <y>84</y>
      <w>660</w>
      <h>816</h>
    </coordinates>
    <panel_attributes>Character
&lt;&lt;abstract&gt;&gt;
--
# name: String
# health int
+ maxHealht: int
# baseDamage: int
# boundingBox: Rectangle
# movementSpeed: float
# velocity: Vector2
+ position: Vector2
# width: int
# height: int
# textureList: List&lt;Texture2D&gt;
# nextTexture: int
# timeSinceLastFrame: int
# frameSpeed: int
# timeSinceLastAttack: int
# attackSpeed: int
# damageReceivedSound: SoundEffect
# attackWithNoWeaponSound: SoundEffect
# deathSound: SoundEffect
# equiptedItem: Item
--
+ Character(String name, int health, int width, int height, Vector2 position
	List&lt;Texture2D&gt; textures, float movementSpeed, SoundEffect damageReceivedSound,
	SoundEffect deathSound, SoundEffect attackWithNoWeaponSound): Character
--
+ updatePosition(List&lt;Rectangle&gt; collisionObjects) : void &lt;&lt;abstract&gt;&gt;
+ isTouchingLeft(Rectangle item) : bool &lt;&lt;abstract&gt;&gt;
+ isTouchingRight(Rectangle item) : bool &lt;&lt;abstract&gt;&gt;
+ isTouchingUp(Rectangle item) : bool &lt;&lt;abstract&gt;&gt;
+ isTouchingDown(Rectangle item) : bool &lt;&lt;abstract&gt;&gt;
+ Update(GameTime gameTime): void &lt;&lt;abstract&gt;&gt;
+ moveUp(): void &lt;&lt;abstract&gt;&gt;
+ moveDown(): void &lt;&lt;abstract&gt;&gt;
+ moveLeft(): void &lt;&lt;abstract&gt;&gt;
+ moveRight(): void &lt;&lt;abstract&gt;&gt;
+ attack(GameTime, Character target): void &lt;&lt;abstract&gt;&gt;
+ receiveDamage(Character source, int damage): void &lt;&lt;abstract&gt;&gt;
+ hit(Vector2 targetVector): bool
+ addXP(int xp): void &lt;&lt;virtual&gt;&gt;
+ equipItem(Item item): Item
+ healLife(int amount): vooid</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>564</x>
      <y>948</y>
      <w>672</w>
      <h>432</h>
    </coordinates>
    <panel_attributes>Player
--
+ interactableNearby: Tile
+ inventory: Inventory
- currentXP: int
- maxXPForCurrentLevel: int
- level: int
--
+ Player(String name, int health, int width, int height, Vector2 position,
List&lt;Texture2D&gt; textures, float movementSpeed, SoundEffect damageReceivedSound,
SoundEffect deathSound, SoundEffect attackWithNoWeaponSound,
Invenotry inventory): Player
--
+ updatePosition(List&lt;Rectangle&gt; collisionObjects) : void &lt;&lt;override&gt;&gt;
+ isTouchingLeft(Rectangle item) : bool &lt;&lt;override&gt;&gt;
+ isTouchingRight(Rectangle item) : bool &lt;&lt;override&gt;&gt;
+ isTouchingUp(Rectangle item) : bool &lt;&lt;override&gt;&gt;
+ isTouchingDown(Rectangle item) : bool &lt;&lt;override&gt;&gt;
+ moveUp(): void &lt;&lt;override&gt;&gt;
+ moveDown(): void &lt;&lt;override&gt;
+ moveLeft(): void &lt;&lt;override&gt;&gt;
+ moveRight(): void &lt;&lt;override&gt;&gt;
+ Update(GameTime): void &lt;&lt;override&gt;&gt;
+ receiveDamage(int): void &lt;&lt;override&gt;&gt;
+ attack(GameTime, Character): void &lt;&lt;override&gt;&gt;
+ getCurrentXP(): int
+ addXP(int xp): void &lt;&lt;override&gt;&gt;
+ getMaxXForCurrentLevel(): int
+ getLevel: int
+ calculatePushBack(): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>300</x>
      <y>1416</y>
      <w>864</w>
      <h>600</h>
    </coordinates>
    <panel_attributes>Enemy
--
- loot: List&lt;Item&gt;
- exp: int
- direction: Vector2
- rotation: Vector2
- random: Random
- traveledInSameDirection
- lastDirection
--
+ Enemy(String name, List&lt;Texture2D&gt; texture, int width, int height, List&lt;Item&gt; loot, int exp): Enemy 
+ Enemy(String name, List&lt;Texture2D&gt; texture, int width, int height, List&lt;Item&gt; loot, int exp,
Spell equippedItem, int attackSPpeed = 700): Enemy 
--
+ updatePosition(List&lt;Rectangle&gt; collisionObjects) : void &lt;&lt;override&gt;&gt;
+ isTouchingLeft(Rectangle item) : bool &lt;&lt;override&gt;&gt;
+ isTouchingRight(Rectangle item) : bool &lt;&lt;override&gt;&gt;
+ isTouchingUp(Rectangle item) : bool &lt;&lt;override&gt;&gt;
+ isTouchingDown(Rectangle item) : bool &lt;&lt;override&gt;&gt;
+ moveUp(): void &lt;&lt;override&gt;&gt;
+ moveDown(): void &lt;&lt;override&gt;
+ moveLeft(): void &lt;override&gt;&gt;
+ moveRight(): void &lt;override&gt;
+ Update(GameTime): void &lt;override&gt;&gt;
+ receiveDamage(int): void &lt;&lt;override&gt;&gt;
+ attack(GameTime, Character): void &lt;&lt;override&gt;&gt;
+ dropItem(): Item
+ expGrant(): int
+ getNextMove(Vector2 target): int
+ getNextMove(): int
+ attackWithSpell(GameTime gameTime, Character target, Vector3 cameraPos, List&lt;Spells&gt; castedSpells) : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>372</x>
      <y>888</y>
      <w>96</w>
      <h>552</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
Extends</panel_attributes>
    <additional_attributes>10.0;440.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>696</x>
      <y>888</y>
      <w>96</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
Extends</panel_attributes>
    <additional_attributes>10.0;50.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>888</x>
      <y>84</y>
      <w>552</w>
      <h>276</h>
    </coordinates>
    <panel_attributes>Item
&lt;&lt;abstract&gt;&gt;
--
+ name: String
+ texture: Texture2D
+ rarity: int
+ rotation: Vector2
+ speed: float
+ value: int
+ isEquippable: bool
--
+ Item(String name, Texture2D texture, int rarity, Vector2 rotation): Item
+ Item(String name, Texture2D texture, int rarity, Vector2 rotation, int value, bool isEquippable): Item
+ Item(String name, Texture2D texture, int rarity, Vector2 rotation, int value, bool isEquippable, float speed): Item
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1488</x>
      <y>264</y>
      <w>636</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>Key
--

--
+ Key(String name, int rarity, Texture2D texture, Vector2 rotation): Item
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1428</x>
      <y>180</y>
      <w>756</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extends</panel_attributes>
    <additional_attributes>610.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1572</x>
      <y>192</y>
      <w>36</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;60.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>888</x>
      <y>444</y>
      <w>276</w>
      <h>300</h>
    </coordinates>
    <panel_attributes>Inventory
--
+ item_list: List&lt;Item&gt;
+ inventorySlots: int
+ gold: int
- drawVector: Vector2
- empty_texture: Texture2D
- selected_texture: Texture2D
- selected_item_id: int 
--
+ Inventory(): Inventory
--
+ invenotryFull(): bool
+ AddItem(Item item): bool
+ RemoveItem(Item item): bool
+ GetItemName(int index): String
+ RemoveItemWithIndex(int index): bool
+ euqipSelectedItem(Character target): void
+ dropSelectedItem(int index): void
+ getGold(): int
+ Draw(): void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1020</x>
      <y>348</y>
      <w>48</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
m1=1
m2=n

</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1020</x>
      <y>732</y>
      <w>48</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
m1=1
m2=1

</panel_attributes>
    <additional_attributes>10.0;180.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1260</x>
      <y>408</y>
      <w>864</w>
      <h>840</h>
    </coordinates>
    <panel_attributes>Tile
--
- texture: List&lt;Texture2D&gt;

# hasCollision: bool
# isInteractable: bool
# interacted: bool
# isLocked : bool
# doesDamage: bool
# isAnimated: bool

- interactedTexture: Texture2D
- neighbourInteractable: Tile
# interactionSound: SoundEffect

- requiredItem: Item

- baseDamage: int
- attackSound: SoundEffect
- attackSpeed: int

- frameSpeed: int
- animationSound: SoundEffet

- timeSinceLastAttack: int
- timeSinceLastFrame: int
- nextTexture: int

--
+ Tile(Texture2D textures, bool hasCollision): Tile
--
+ SetIsInteractable(Texture2D interactedTexture, Tile neighbourInteractable, SoundEffect interactionSound): void
+ SetIsLocked(Item requiredItem): void
+ SetDoesDamage(int baseDamage, SoundEffect attackSound, int attackSpeed): void
+ SetIsAnimated(List&lt;Texture2D&gt; animation, int frameSpeed, SoundEffect animationSound): void

+ Update(GameTime gameTime): void
# Interact(): void
+ Interact(Inventory inventory): Item &lt;&lt;virtual&gt;&gt;
+ attack(GameTime gameTime, Character target): void

+ texture(): Texture2D
+ getHasCollision(): bool
+ getIsInteractable(): bool
+ getDoesDamage(): bool
+ playInteractionSound: void
+ playInteractionSong: void
+ hasInteractionSong(): bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1188</x>
      <y>1476</y>
      <w>612</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>TileEntry
Wrapper class for tiles
--
+ tile: Tile
+ drawVector: Vector2
- targetTextureResolution
+ boundingBox: Rectangle
--
+ TileEntry(Tile tile, Vector2 drawVector, int targetTextureResolution): TileEntry
+ hit(Vector2): bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1476</x>
      <y>1236</y>
      <w>48</w>
      <h>264</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
m1=n
m2=1

</panel_attributes>
    <additional_attributes>10.0;200.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1680</x>
      <y>1344</y>
      <w>828</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>ChestTile
--
- loot: List&lt;Item&gt;
--
+ ChestTile(Texture2D textures, bool hasCollision, List&lt;Item&gt; loot): ChestTile
--
+ Interact(Inventory inventory): Item &lt;&lt;override&gt;&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1980</x>
      <y>1236</y>
      <w>96</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-
extends
</panel_attributes>
    <additional_attributes>10.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1476</x>
      <y>1368</y>
      <w>228</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=-
m2=1
</panel_attributes>
    <additional_attributes>10.0;20.0;170.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2160</x>
      <y>144</y>
      <w>1224</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>Spell
--
+ position: Vector2
+ direction: Vector2
+ targetPosition: Vector2
+ originPosition: Vector2
+ caster: Character
--
+ Spell(String name, Texture2D texture, int rarity, float rotation, int value, float speed, SoundEffect sound = null): Spell
+ Spell(String name, Texture2D texture, int rarity, float rotation, int value, float speed, Character caster, SoundEffect sound = null): Spell
# Spell(String name, Texture2D texture, int rarity, float rotation, int value, float speed, Vector2 position, Vector2 direction, Vector2 targetPosition, Vector2 originPosition, Character caster, SoundEffect sound = null): Spell
--
+ Update(GameTime gameTime): void &lt;&lt;abstract&gt;&gt;
+ Cast(Vector2 position, float rotation, Vector2 direction, Vector2 targetPosition, Vector2 originPosition) : void &lt;&lt;abstract&gt;&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
